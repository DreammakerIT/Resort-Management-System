@model IEnumerable<LuxuryResort.Areas.Admin.Models.RoomInstance>

@{
    ViewData["Title"] = "Quản lý Phòng";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<style>
    :root {
        --primary-color: #007bff;
        --primary-color-hover: #0056b3;
        --secondary-color: #6c757d;
        --background-color: #f8f9fa;
        --card-background-color: #ffffff;
        --text-color: #343a40;
        --text-color-muted: #6c757d;
        --border-color: #dee2e6;
        --shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        /* Status Colors */
        --status-available-bg: #e7f7ef;
        --status-available-text: #28a745;
        --status-occupied-bg: #fff0f1;
        --status-occupied-text: #dc3545;
        --status-cleaning-bg: #fff8e1;
        --status-cleaning-text: #ffc107;
        --status-outoforder-bg: #f8f9fa;
        --status-outoforder-text: #6c757d;
    }

    body {
        background-color: var(--background-color);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    /* Page Header */
    .page-header-v2 {
        margin-bottom: 24px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 16px;
    }

    .page-title-v2 {
        font-size: 2rem;
        font-weight: 700;
        display: flex;
        align-items: center;
        gap: 12px;
    }

        .page-title-v2 i {
            color: var(--primary-color);
        }

    .page-subtitle-v2 {
        font-size: 1rem;
        color: var(--text-color-muted);
        margin-top: 4px;
    }

    /* Buttons */
    .btn-create-v2 {
        background-color: var(--primary-color);
        color: white;
        padding: 12px 20px;
        border-radius: 8px;
        text-decoration: none;
        font-weight: 600;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        transition: background-color 0.2s ease, box-shadow 0.2s ease;
        border: none;
        cursor: pointer;
    }

        .btn-create-v2:hover {
            background-color: var(--primary-color-hover);
            box-shadow: 0 2px 8px rgba(0, 123, 255, 0.3);
            color: white;
        }

    /* Statistics Cards */
    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
        gap: 20px;
        margin-bottom: 24px;
    }

    .stat-card-v2 {
        background-color: var(--card-background-color);
        padding: 24px;
        border-radius: 12px;
        box-shadow: var(--shadow);
        display: flex;
        align-items: center;
        gap: 20px;
        border-left: 5px solid transparent;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

        .stat-card-v2:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 15px rgba(0,0,0,0.07);
        }

        .stat-card-v2 .stat-icon {
            font-size: 2rem;
            padding: 16px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .stat-card-v2.available {
            border-color: var(--status-available-text);
        }

            .stat-card-v2.available .stat-icon {
                background-color: var(--status-available-bg);
                color: var(--status-available-text);
            }

        .stat-card-v2.occupied {
            border-color: var(--status-occupied-text);
        }

            .stat-card-v2.occupied .stat-icon {
                background-color: var(--status-occupied-bg);
                color: var(--status-occupied-text);
            }

        .stat-card-v2.cleaning {
            border-color: var(--status-cleaning-text);
        }

            .stat-card-v2.cleaning .stat-icon {
                background-color: var(--status-cleaning-bg);
                color: var(--status-cleaning-text);
            }

        .stat-card-v2.outoforder {
            border-color: var(--status-outoforder-text);
        }

            .stat-card-v2.outoforder .stat-icon {
                background-color: var(--status-outoforder-bg);
                color: var(--status-outoforder-text);
            }

    .stat-info .stat-number {
        font-size: 2rem;
        font-weight: 700;
        margin: 0;
    }

    .stat-info .stat-label {
        font-size: 0.9rem;
        color: var(--text-color-muted);
        margin: 0;
    }

    /* Main Card */
    .main-card-v2 {
        background-color: var(--card-background-color);
        border-radius: 12px;
        box-shadow: var(--shadow);
        overflow: hidden;
    }

    .card-header-v2 {
        padding: 20px 24px;
        border-bottom: 1px solid var(--border-color);
    }

    .card-title-v2 {
        font-size: 1.5rem;
        font-weight: 600;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    /* Data Table Customizations */
    .table-responsive {
        width: 100%;
        overflow-x: auto;
        padding: 1rem;
    }

    .table-modern-v2 {
        width: 100% !important;
        border-collapse: collapse;
    }
        /* Important to override default styles */
        .table-modern-v2 th, .table-modern-v2 td {
            padding: 16px;
            text-align: left;
            vertical-align: middle;
        }

        .table-modern-v2 thead {
            border-bottom: 2px solid var(--border-color);
        }

        .table-modern-v2 th {
            font-weight: 600;
            color: var(--text-color-muted);
            text-transform: uppercase;
            font-size: 0.8rem;
            letter-spacing: 0.5px;
        }

        .table-modern-v2 tbody tr {
            border-bottom: 1px solid var(--border-color);
        }

            .table-modern-v2 tbody tr:last-child {
                border-bottom: none;
            }

            .table-modern-v2 tbody tr:hover {
                background-color: #f1f3f5;
            }

    .room-number-v2 {
        font-weight: 600;
        font-size: 1.1rem;
    }

    .room-type-v2 {
        color: var(--text-color-muted);
    }

    .status-badge {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        padding: 6px 12px;
        border-radius: 999px;
        font-weight: 600;
        font-size: 0.85rem;
    }

        .status-badge.available {
            background-color: var(--status-available-bg);
            color: var(--status-available-text);
        }

        .status-badge.occupied {
            background-color: var(--status-occupied-bg);
            color: var(--status-occupied-text);
        }

        .status-badge.cleaning {
            background-color: var(--status-cleaning-bg);
            color: var(--status-cleaning-text);
        }

        .status-badge.outoforder {
            background-color: var(--status-outoforder-bg);
            color: var(--status-outoforder-text);
        }

    .action-buttons-v2 {
        display: flex;
        gap: 8px;
    }

    .btn-action-v2 {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
        color: var(--secondary-color);
        background-color: #f1f3f5;
        transition: all 0.2s ease;
    }

        .btn-action-v2:hover {
            transform: translateY(-2px);
        }

        .btn-action-v2.btn-edit-v2:hover {
            background-color: #e0eaff;
            color: #0056b3;
        }

        .btn-action-v2.btn-details-v2:hover {
            background-color: #e7f7ef;
            color: #1e7e34;
        }

        .btn-action-v2.btn-delete-v2:hover {
            background-color: #fbebee;
            color: #c82333;
        }

    /* Empty State */
    .empty-state-v2 {
        text-align: center;
        padding: 80px 40px;
    }

    .empty-icon-v2 {
        font-size: 5rem;
        color: #ced4da;
        margin-bottom: 24px;
    }

    .empty-state-v2 h3 {
        font-size: 1.75rem;
        font-weight: 600;
        margin-bottom: 8px;
    }

    .empty-state-v2 p {
        color: var(--text-color-muted);
        margin-bottom: 24px;
        max-width: 400px;
        margin: 0 auto 24px auto;
    }
</style>

<div class="container-fluid">
    <div class="page-header-v2">
        <div>
            <h1 class="page-title-v2">
                <i class="fas fa-door-open"></i>
                Quản lý Phòng
            </h1>
            <p class="page-subtitle-v2">Quản lý và theo dõi tình trạng các phòng trong khách sạn</p>
        </div>
        <a asp-action="Create" class="btn-create-v2">
            <i class="fas fa-plus"></i>
            Thêm Phòng Mới
        </a>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success d-flex align-items-center" role="alert">
            <i class="fas fa-check-circle me-2"></i>
            <div>@TempData["SuccessMessage"]</div>
        </div>
    }

    <div class="stats-grid">
        <a class="stat-card-v2 available" href="@Url.Action("Index", new { filter = "available_today" })" style="text-decoration:none;">
            <div class="stat-icon"><i class="fas fa-check-circle"></i></div><div class="stat-info"><h3 class="stat-number">@ViewBag.AvailableTodayCount</h3><p class="stat-label">Phòng Có Sẵn (Hôm nay)</p></div>
        </a>
        <a class="stat-card-v2 occupied" href="@Url.Action("Index", new { filter = "occupied_today" })" style="text-decoration:none;">
            <div class="stat-icon"><i class="fas fa-bed"></i></div><div class="stat-info"><h3 class="stat-number">@ViewBag.OccupiedTodayCount</h3><p class="stat-label">Phòng Đã Thuê (Hôm nay)</p></div>
        </a>
        <a class="stat-card-v2 cleaning" href="@Url.Action("Index", new { filter = "cleaning" })" style="text-decoration:none;">
            <div class="stat-icon"><i class="fas fa-broom"></i></div><div class="stat-info"><h3 class="stat-number">@ViewBag.CleaningCount</h3><p class="stat-label">Đang Dọn Dẹp</p></div>
        </a>
        <a class="stat-card-v2 outoforder" href="@Url.Action("Index", new { filter = "outoforder" })" style="text-decoration:none;">
            <div class="stat-icon"><i class="fas fa-exclamation-triangle"></i></div><div class="stat-info"><h3 class="stat-number">@ViewBag.OutOfOrderCount</h3><p class="stat-label">Cần Sửa Chữa</p></div>
        </a>
    </div>

    <div class="main-card-v2">
        @if (Model.Any())
        {
            <div class="card-header-v2">
                <h2 class="card-title-v2">
                    <i class="fas fa-list"></i>
                    Danh sách Phòng
                </h2>
            </div>

            <div class="table-responsive">
                @if (!string.IsNullOrEmpty(ViewBag.ActiveFilter))
                {
                    <div class="alert alert-info" role="alert" style="margin-bottom:16px;">
                        Đang lọc: <strong>@(ViewBag.FilterLabel ?? "")</strong> • <a href="@Url.Action("Index")">Bỏ lọc</a>
                    </div>
                }
                <table class="table table-hover table-modern-v2" id="roomsTable">
                    <thead>
                        <tr>
                            <th>Số phòng</th>
                            <th>Hạng phòng</th>
                            <th>Tình trạng</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td><div class="room-number-v2">@Html.DisplayFor(modelItem => item.RoomNumber)</div></td>
                                <td><div class="room-type-v2">@Html.DisplayFor(modelItem => item.Room.Type)</div></td>
                                <td>
                                    @{
                                        var occupiedToday = ((HashSet<int>)ViewBag.OccupiedTodayIds)?.Contains(item.Id) == true;
                                        var statusClass = occupiedToday ? "occupied" : "available";
                                        var statusText = occupiedToday ? "Đã thuê" : "Có sẵn";
                                        var statusIcon = occupiedToday ? "fas fa-bed" : "fas fa-check-circle";
                                        if (!occupiedToday && item.Status == "Cleaning") { statusClass = "cleaning"; statusText = "Đang dọn"; statusIcon = "fas fa-broom"; }
                                        if (!occupiedToday && item.Status == "OutOfOrder") { statusClass = "outoforder"; statusText = "Hỏng"; statusIcon = "fas fa-exclamation-triangle"; }
                                    }
                                    <span class="status-badge @statusClass"><i class="@statusIcon"></i> @statusText</span>
                                </td>
                                <td>
                                    <div class="action-buttons-v2">
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn-action-v2 btn-edit-v2" title="Chỉnh sửa"><i class="fas fa-pencil-alt"></i></a>
                                        <a asp-action="Details" asp-route-id="@item.Id" class="btn-action-v2 btn-details-v2" title="Chi tiết"><i class="fas fa-eye"></i></a>
                                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn-action-v2 btn-delete-v2" title="Xóa"><i class="fas fa-trash"></i></a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="empty-state-v2">
                <div class="empty-icon-v2"><i class="fas fa-door-open"></i></div>
                <h3>Chưa có phòng nào được tạo</h3>
                <p>Hãy bắt đầu bằng cách thêm phòng mới để quản lý khách sạn của bạn.</p>
                <a asp-action="Create" class="btn-create-v2"><i class="fas fa-plus"></i> Tạo Phòng Đầu Tiên</a>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>
    <script>
        $(document).ready(function () {
            // Khởi tạo DataTables cho bảng có id="roomsTable"
            $('#roomsTable').DataTable({
                // Thiết lập ngôn ngữ hiển thị là Tiếng Việt
                language: {
                    url: "//cdn.datatables.net/plug-ins/1.13.6/i18n/vi.json"
                },

                // Tùy chỉnh layout của các thành phần điều khiển
                // 'l' = length changing input (Bộ lọc số lượng hiển thị)
                // 'f' = filtering input (Ô tìm kiếm)
                // 't' = the table (Bảng dữ liệu)
                // 'i' = table information summary (Thông tin trang)
                // 'p' = pagination control (Phân trang)
                // <"row"<"col"...>> là các thẻ div của Bootstrap để dàn trang
                dom: '<"row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6"f>>' +
                     '<"row"<"col-sm-12"t>>' +
                     '<"row"<"col-sm-12 col-md-5"i><"col-sm-12 col-md-7"p>>',

                // Các tùy chọn khác
                pageLength: 10,       // Số mục hiển thị mặc định trên mỗi trang
                order: [[0, 'asc']],  // Sắp xếp mặc định theo cột đầu tiên (Số phòng) tăng dần
                columnDefs: [{
                    orderable: false, // Tắt tính năng sắp xếp
                    targets: 3        // cho cột thứ 4 (Hành động)
                }]
            });
        });
    </script>
}